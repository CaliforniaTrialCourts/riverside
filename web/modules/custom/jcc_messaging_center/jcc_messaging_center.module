<?php

/**
 * @file
 * Contains jcc_blocks.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\BubbleableMetadata;
use Drupal\Core\Entity\EntityInterface;

use Drupal\views\Views;

/**
 * Implements hook_form_alter().
 */
function jcc_messaging_center_form_alter(&$form, &$form_state, $form_id) {
  if (in_array($form['#form_id'],
    [
      'node_messaging_news_item_edit_form',
  // 'user_form',
    ]
  )) {
    if ($form['#form_id'] == 'user_form') {
      // kint('user_form');.
    }
    elseif ($form['#form_id'] == 'node_messaging_news_item_edit_form') {
      $form['group_messaging_options']['field_send_email'] = [
        '#type' => 'checkbox',
        '#title' => t('Send an email when saving this news item.'),
        '#default_value' => FALSE,
        '#weight' => 50,
      ];
    }
    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = 'jcc_messaging_center_form_submit';
      }
    }
  }
  elseif ($form['#form_id'] == 'user_register_form') {
    $form['actions']['submit']['#value'] = t('Subscribe');
  }
}

/**
 * Alters for submission - sends query.
 */
function jcc_messaging_center_form_submit($form, FormStateInterface $form_state) {
  if (in_array($form['#form_id'], ['node_messaging_news_item_edit_form'])
    && $form_state->cleanValues()->getValues()['field_send_email'] == 1) {
    // Global $base_url;.
    $form_group_values = $form_state->cleanValues()->getValues()['field_mailing_group'];

    $emails_array = [];
    $groups_array = [];
    if ($form_group_values) {
      foreach ($form_group_values as $data) {
        $groups_array[] = $data['target_id'];
      }
    }
    $view = Views::getView('users_by_group');
    $view->get_total_rows = TRUE;
    $view->setArguments([implode('+', $groups_array)]);
    $view->execute('default');
    $rows = $view->total_rows;

    if ($rows != 0) {
      $view_result = $view->result;

      foreach ($view_result as $row) {
        foreach ($view->field as $field) {
          $emails_array[] = $field->getValue($row);
        }
      }
    }
    // dsm($emails_array);
  }
  elseif ($form['#form_id'] == 'user_form') {
  }
}

/**
 * Implements hook_entity_insert().
 */
function jcc_messaging_center_user_insert(EntityInterface $entity) {
  $tempstore = \Drupal::service('tempstore.shared');
  $store = $tempstore->get('jcc_subscriptions');
  $store->set('member_email_' . $entity->get('mail')->value, user_password());
}

/**
 * Implements hook_token_info().
 */
function jcc_messaging_center_token_info() {
  $type = [
    'name' => t('JCC Custom'),
    'description' => t('JCC Custom Tokens.'),
  ];
  $jcc['subscription-mail-access-key'] = [
    'name' => t("Subscription Mail Access Key"),
    'description' => t('Subscription Access Key for Mail'),
  ];

  return [
    'types' => ['jcc' => $type],
    'tokens' => ['jcc' => $jcc],
  ];
}

/**
 * Implements hook_tokens().
 */
function jcc_messaging_center_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  if ($type == 'jcc' && !empty($data['user'])) {
    /** @var \Drupal\user\UserInterface $account */
    $account = $data['user'];

    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'subscription-mail-access-key':
          $tempstore = \Drupal::service('tempstore.shared');
          $store = $tempstore->get('jcc_subscriptions');
          $replacements[$original] = $store->get('member_email_' . $account->get('mail')->value);
          break;
      }
    }
  }
  return $replacements;
}
