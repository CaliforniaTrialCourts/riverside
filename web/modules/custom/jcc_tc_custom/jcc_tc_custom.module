<?php

/**
 * @file
 * Contains jcc_tc_custom.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function jcc_tc_custom_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Set default publish_state if it exists and is not set.
  if (!empty($form['publish_state'])) {
    $options = $form['publish_state']['widget'][0]['#options'];
    if (array_key_exists('published', $options)) {
      $default_value = $form['publish_state']['widget'][0]['#default_value'];
      $form['publish_state']['widget'][0]['#default_value'] = empty($default_value) ? ['published'] : $default_value;
    }
  }
  // Set default unpublish_state if it exists and is not set.
  if (!empty($form['unpublish_state'])) {
    $options = $form['unpublish_state']['widget'][0]['#options'];
    if (array_key_exists('archived', $options)) {
      $default_value = $form['unpublish_state']['widget'][0]['#default_value'];
      $form['unpublish_state']['widget'][0]['#default_value'] = empty($default_value) ? ['archived'] : $default_value;
    }
  }
}

/**
 * Implements hook_form_alter().
 */

// Cleaning menu item admin page for editors
function jcc_tc_custom_form_alter(&$form, &$form_state, $form_id){
  if($form['#form_id'] == 'menu_link_content_main_form'){
    $current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    //menu items to protect
    $protected_menu_items = array('1', '11', '24', '25', '26', '93');

    //disabling menu edits for specific items.
    if (!$current_user->hasRole('administrator')){
      $menu_item_id = $form_state->getBuildInfo()['callback_object']->getEntity()->get('id')->getValue()[0]['value'];
      if(in_array($menu_item_id, $protected_menu_items)){
        $form['link']['#disabled'] = true;
        $form['weight']['#disabled'] = true;
        $form['menu_parent']['#disabled'] = true;
        $form['enabled']['#disabled'] = true;
        $form['expanded']['#disabled'] = true;
        $form['actions']['delete']['#access'] = false;
      }
    }

    $properties_group = 'group_menu_item_properties';
    $details_group = 'group_details_sidebar';

    main_menu_cleaning_helper($form, 'menu_parent', $properties_group);
    main_menu_cleaning_helper($form, 'weight', $details_group);
    main_menu_cleaning_helper($form, 'expanded', $details_group);
    main_menu_cleaning_helper($form, 'enabled', $details_group);
    main_menu_cleaning_helper($form, 'description', $details_group);

    $form['link']['widget'][0]['options']['attributes']['#open'] = 0;
    // Protecting menu options from selected nodes
  } else if ($form['#form_id'] == 'node_landing_page_edit_form'){
    $current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    //menu items to protect
    $protected_menu_nodes = array('651', '650', '834', '27', '928', '835', '836');

    //disabling menu edits for specific nodes.
    if (!$current_user->hasRole('administrator')){
      $node_id = $form_state->getBuildInfo()['callback_object']->getEntity()->get('nid')->getValue()[0]['value'];
      if(in_array($node_id, $protected_menu_nodes)){
        $form['actions']['delete']['#access'] = false;
        array_push($form['#attributes']['class'], 'menu-settings-hidden');
        array_push($form['#attached']['library'], 'jcc_tc_custom/jcc_tc_custom');
      }
    }
  }
}

function main_menu_cleaning_helper(&$form, $field, $group){
  if(!empty($form[$field])) {
    $form[$field]['#group'] = $group;
    $form['#group_children'][$field] = $group;
    array_push($form['#fieldgroups'][$group]->children, $field);
    $form[$group][$field] = $form[$field];
    unset($form[$field]);
  }
}
